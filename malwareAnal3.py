#first creator of dataset for weka, use trasformation from bin to dec
import string
import os
import csv 

#open file csv with all malware, save these in a string
with open("C:\Users\Lorenzo\Desktop\drebin\sha256_family.csv", "rb") as csvfile:
	spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')
	in_line=""
	for row in spamreader:
		in_line=in_line+ ","+''.join(row)

#open directory where there are the training set files save all the file inside in a list and create a dictionary from this list		
direct= "C:\Users\Lorenzo\Desktop\MachineLearning\datasetMalware\\"
listM = os.listdir('C:\Users\Lorenzo\Desktop\MachineLearning\datasetMalware')
dictM=dict.fromkeys(listM) 

#open file arff where write the datasheet for weka
fweka=open("C:\Users\Lorenzo\Desktop\lollo.arff","w")
fweka.write("@relation malware\n")

momstr = ""
i=0
j=0
dictMalFeat={}
dictNonFeat={}

#now for all the malwere saved in svc file say if they are inside or not of the two directory and labeled each malwere with "M"
for indexj in range(0,len(in_line)):
		if in_line[indexj].isalnum():
			g=in_line[indexj]
			momstr=momstr+g
		else:
			if not(momstr==""):
				if dictM.has_key(momstr):
					dict2={momstr: "M"}
					dictM.update(dict2)
					i=i+1
				momstr=""
				
				
print "\nLEARNING PHASE CONCLUSED, FOUNDED ",i, " DANGEROUS FILE ON ",
print len(dictM), "FILE ESAMINATED IN TRAINING SET"

s1=[]	#feature
s2=[]	#permission
s3=[]	#activity, service_receiver, provider, service
s4=[]	#intent
s5=[]	#api_call
s6=[]	#real_permission
s7=[]	#call
s8=[]	#url

fweka.write("\n@attribute s1 real\n@attribute s2 real\n@attribute s3 real\n@attribute s4 real\n@attribute s5 real\n@attribute s6 real\n@attribute s7 real\n@attribute s8 real")
fweka.write("\n@attribute malware { M , U }\n")
fweka.write("\n@data")

#create 8 list not ordered where put all the line that contain one of the key words written over
momstr = ""

for indexj in range(0,len(listM)):
	fileName=listM[indexj]
	fileNameTot=direct+fileName
	in_file=open(fileNameTot, "r")

	while True:
		in_line=in_file.readline()
		if in_line=="":
			break
		else:
			if in_line.startswith("feature"):
				if(s1.count(in_line)==0):
					s1.append(in_line)
			elif in_line.startswith("permission"):
				if(s2.count(in_line)==0):
					s2.append(in_line)
			elif in_line.startswith("service") or in_line.startswith("activity") or in_line.startswith("provider"):
				if(s3.count(in_line)==0):
					s3.append(in_line)
			elif in_line.startswith("intent"):
				if(s4.count(in_line)==0):
					s4.append(in_line)
			elif in_line.startswith("api"):
				if(s5.count(in_line)==0):
					s5.append(in_line)
			elif in_line.startswith("real"):
				if(s6.count(in_line)==0):
					s6.append(in_line)
			elif in_line.startswith("call"):
				if(s7.count(in_line)==0):
					s7.append(in_line)
			elif in_line.startswith("url"):
				if(s8.count(in_line)==0):
					s8.append(in_line)
				
#order the list whit .sort()

s1.sort()
s2.sort()
s3.sort()
s4.sort()
s5.sort()
s6.sort()
s7.sort()
s8.sort()

#print s1
#using these lists i associate 8 numbers to 1 file, these numbers are composed by the sum of 2^index of the features inside the 8 lists

for indexj in range(0,len(listM)):
	fileName=listM[indexj]
	fileNameTot=direct+fileName
	in_file=open(fileNameTot, "r")
	sum1=0
	sum2=0
	sum3=0
	sum4=0
	sum5=0
	sum6=0
	sum7=0
	sum8=0
	c="U"
	if dictM.get(fileName)=="M":
		c="M"

	while True:
		in_line=in_file.readline()
		if in_line=="":
			break
		else:
			if in_line.startswith("feature"):
				if(s1.count(in_line)==1):
					sum1=sum1+2^(s1.index(in_line))
			elif in_line.startswith("permission"):
				if(s2.count(in_line)==1):
					sum2=sum2+2^(s2.index(in_line))
			elif in_line.startswith("service") or in_line.startswith("activity") or in_line.startswith("provider"):
				if(s3.count(in_line)==1):
					sum3=sum3+2^(s3.index(in_line))
			elif in_line.startswith("intent"):
				if(s4.count(in_line)==1):
					sum4=sum4+2^(s4.index(in_line))
			elif in_line.startswith("api"):
				if(s5.count(in_line)==1):
					sum5=sum5+2^(s5.index(in_line))
			elif in_line.startswith("real"):
				if(s6.count(in_line)==1):
					sum6=sum6+2^(s6.index(in_line))
			elif in_line.startswith("call"):
				if(s7.count(in_line)==1):
					sum7=sum7+2^(s7.index(in_line))
			elif in_line.startswith("url"):
				if(s8.count(in_line)==1):
					sum8=sum8+2^(s8.index(in_line))
	
	l=str(sum1)+","+str(sum2)+","+str(sum3)+","+str(sum4)+","+str(sum5)+","+str(sum6)+","+str(sum7)+","+str(sum8)+","+str(c)
	fweka.write("\n")
	fweka.write(l)
	#print  l
	
	
fweka.close()

#cell of the list if now u print the new list u have a sort of combination of 0101... 
#transate this number in decimal number 